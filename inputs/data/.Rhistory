#hide code from pdf outputs
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#load libraries that I am going to use
library(tidyverse)
library(readr)
library(palmerpenguins)
library(brms)
#Import the data and attach the variables to the path
clean_data <- read_csv("~/GitHub/STA304-PS5/inputs/data/clean_data.csv")
attach(clean_data)
ggplot(clean_data, aes(x = program, fill = coding_exp)) +
geom_bar(alpha = 0.8) +
scale_fill_manual(values = c("purple","cyan4"),
guide = FALSE) +
theme_minimal() +
coord_flip()
# Run Model
mod1 <- brms::brm(
anxiety_score ~ (1|sex) + (1|program) + (1|cgpa) + (1|coding_exp),
data = clean_data
)
#hide code from pdf outputs
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#load libraries that I am going to use
library(tidyverse)
library(readr)
library(palmerpenguins)
library(brms)
#Import the data and attach the variables to the path
clean_data <- read_csv("~/GitHub/STA304-PS5/inputs/data/clean_data.csv")
attach(clean_data)
ggplot(clean_data, aes(x = program, fill = coding_exp)) +
geom_bar(alpha = 0.8) +
scale_fill_manual(values = c("purple","cyan4"),
guide = FALSE) +
theme_minimal() +
coord_flip()
# Run Model
mod1 <- brms::brm(
anxiety_score ~ (1|sex) + (1|program) + (1|cgpa) + (1|coding_exp),
data = clean_data
)
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
#hide code from pdf outputs
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#load libraries that I am going to use
library(tidyverse)
library(readr)
library(palmerpenguins)
library(brms)
#Import the data and attach the variables to the path
clean_data <- read_csv("~/GitHub/STA304-PS5/inputs/data/clean_data.csv")
attach(clean_data)
ggplot(clean_data, aes(x = program, fill = coding_exp)) +
geom_bar(alpha = 0.8) +
scale_fill_manual(values = c("purple","cyan4"),
guide = FALSE) +
theme_minimal() +
coord_flip()
# Run Model
mod1 <- brms::brm(
anxiety_score ~ (1|sex) + (1|program) + (1|cgpa) + (1|coding_exp),
data = clean_data
)
summary(mod1)
# Run Model
mod1 <- brms::brm(
anxiety_score ~ (1|sex) + (1|program) + (1|cgpa) + (1|coding_exp),
data = clean_data,
control = list(adapt_delta = 0.98)
)
# Run Model
mod1 <- brms::brm(
anxiety_score ~ (1|sex) + (1|program) + (1|cgpa) + (1|coding_exp),
data = clean_data,
control = list(adapt_delta = 0.98)
)
# Run Model
mod1 <- brms::brm(
anxiety_score ~ (1|sex) + (1|program) + (1|cgpa) + (1|coding_exp),
data = clean_data)
PATH="${RTOOLS40_HOME}\usr\bin;${PATH}"
# Run Model
mod1 <- brms::brm(
anxiety_score ~ (1|sex) + (1|program) + (1|cgpa) + (1|coding_exp),
data = clean_data)
Sys.which("make")
Sys.which("make")
install.packages("jsonlite", type = "source")
install.packages("jsonlite", type = "source")
install.packages("jsonlite", type = "source")
#hide code from pdf outputs
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#load libraries that I am going to use
library(tidyverse)
library(readr)
library(dplyr)
library(brms)
library(tidybayes)
library(ggplot2)
library(forcats)
set.seed(3329)
x <- seq(from=0.1, to=20, by=0.1)
error<-rchisq(200, 100)
y <- 500 + 0.4*(x-10)^3 + error
loesfit <- loess(y~x,span=0.8)
predict(lm(y~x), data.frame(x=15))
predict(loesfit,data.frame(x=15))
tinytex::install_tinytex()
install.packages("tinytex")
setwd("~/GitHub/STA304-PS5/inputs/data")
#### Workspace setup ####
library(haven)
library(tidyverse)
# Read in the raw data
raw_data <- read.csv("survey_results.csv")# Remember to set this to where the result is.
# Add the labels
raw_data <- labelled::to_factor(raw_data)
# Rename the variables
renamed_data <-
raw_data %>%
rename(
qualification = Are.you.a.third.year.student.at.the.University.of.Toronto.and.enrolled.in.a.stats.related.program.,
program = What.is.the.name.of.the.program.that.you.are.enrolled.in.,
sex = What.is.your.gender.,
coding_exp =  Do.you.have.experience.with.any.other.programming.languages.except.for.R.,
cgpa = What.is.your.cGPA.at.the.time.of.the.survey.,
anxiety_score = If.you.were.asked.to.independently.complete.a.data.analysis.using.R..how.do.you.feel..,
suggestion = What.would.ease.your.worries.about.R.
)
#Keep only part of the variables
reduced_data <-
renamed_data %>%
select(
qualification, program, sex, coding_exp, cgpa, anxiety_score
)
#Only keep responses who answered 'yes' to the qualification question
reduced_data <- na.omit(reduced_data)
#We no longer need the qualification question
final_data <-
reduced_data %>%
select(program, sex, coding_exp, cgpa, anxiety_score)
#Export the cleaned data
write.csv(final_data, file = "clean_data.csv")
#### Workspace setup ####
library(tidyverse)
library(haven)
library(dplyr)
# Use a seed to stabilize the sampling results.
set.seed(3329)
student_id <- c(1:850)
sex <- sample(c("Female", "Male"), size = 850, replace = TRUE)
program_list <- c(
"Statistics Minor", "Statistics Major",
"Applied Statistics Specialist", "Statistics Methods and Practise Specialist",
"Statistics Theory and Method Specialist",
"Data Science Specialist", "Actuarial Science Major", "Actuarial Science Specialist"
) #Create list of programs
program_dist <- c(0.2, 0.5, 0.025, 0.05, 0.05, 0.05, 0.1, 0.025)#A list indicating distribution of programs
program <- sample(program_list, size = 850, prob = program_dist, replace = TRUE)
cgpa_list <- c("A (3.4 to 4.0)", "B (2.4 to 3.3)", "C (1.4 to 2.3)", "D (0.7 to 1.3)", "F (0.0 to 0.6)")
cgpa_dist <- c (0.1, 0.3, 0.34, 0.25, 0.01)
cgpa <- sample(cgpa_list, size = 850, prob = cgpa_dist, replace = TRUE)
# Create coding experience variable
coding_exp <- sample(c("Yes", "No"), size = 850, prob = c(0.85, 0.15), replace = TRUE)
census <- data.frame(
cbind(student_id, sex, program, cgpa, coding_exp)
)
cell_counts <- census %>%
group_by(sex, program, cgpa, coding_exp) %>%
count() %>%
mutate(proportion = n/850)
sex_prop <- cell_counts %>%
ungroup() %>%
group_by(sex) %>%
mutate(prop = n/sum(n)) %>%
ungroup()
program_prop <- cell_counts %>%
ungroup() %>%
group_by(program) %>%
mutate(prop = n/sum(n)) %>%
ungroup()
cgpa_prop <- cell_counts %>%
ungroup() %>%
group_by(cgpa) %>%
mutate(prop = n/sum(n)) %>%
ungroup()
code_prop <- cell_counts %>%
ungroup() %>%
group_by(coding_exp) %>%
mutate(prop = n/sum(n)) %>%
ungroup()
write.csv(census, file = "census.csv")
write.csv(cell_counts, file = "cell_counts.csv")
write.csv(sex_prop, file = "sex_prop.csv")
write.csv(program_prop, file = "program_prop.csv")
write.csv(cgpa_prop, file = "cgpa_prop.csv")
write.csv(code_prop, file = "code_prop.csv")
#hide code from pdf outputs
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
#load libraries that I am going to use
library(tidyverse)
library(readr)
library(dplyr)
library(brms)
library(tidybayes)
library(ggplot2)
library(forcats)
attach(census)
ggplot(census, aes(x = program)) +
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Anxiety Score")+ylab("Number of Respondents")+
coord_flip()
attach(census)
program <- ggplot(census, aes(x = program)) +
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Anxiety Score")+ylab("Number of Respondents")+
coord_flip()
group_by(census, cgpa)
summary(census)
summar(census$cgpa)
summary(census$cgpa)
attach(census)#Attach the variable names to path
#Create graph for program distribution in the census
program <- ggplot(census, aes(x = program)) +
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Programs")+ylab("Number of Respondents")+
coord_flip()
#Graph for sex distribution in census
sex <- ggplot(census, aes(x = sex))+
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Sex")+ylab("Number of Respondents")+
coord_flip()
#Graph for sex distribution in census
#Create data frame for a pie chart
data <- data.frame(
group=c("A", "B","C", "D", "F"),
value=c(85,255,289,212,9)#from script 2
)
#pie chart
cgpa<- ggplot(data, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
?ggarrange()
install.packages("ggpubr")
library(ggpubr)
attach(census)#Attach the variable names to path
#Create graph for program distribution in the census
program <- ggplot(census, aes(x = program)) +
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Programs")+ylab("Number of Respondents")+
coord_flip()
#Graph for sex distribution in census
sex <- ggplot(census, aes(x = sex))+
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Sex")+ylab("Number of Respondents")+
coord_flip()
#Graph for sex distribution in census
#Create data frame for a pie chart
data <- data.frame(
group=c("A", "B","C", "D", "F"),
value=c(85,255,289,212,9)#from script 2
)
#pie chart
cgpa<- ggplot(data, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
#Graph for coding experience
coding <- ggplot(census, aes(x = coding_exp))+
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Whether have previous coding experience")+ylab("Number of Respondents")+
coord_flip()
#Combine the graphs
ggarrange(program, sex, cgpa, coding, ncol = 2, nrow = 2)
attach(census)#Attach the variable names to path
#Create graph for program distribution in the census
program <- ggplot(census, aes(x = program)) +
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Programs")+ylab("Number of Respondents")+
coord_flip()
#Graph for sex distribution in census
sex <- ggplot(census, aes(x = sex))+
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Sex")+ylab("Number of Respondents")+
coord_flip()
#Graph for sex distribution in census
#Create data frame for a pie chart
data <- data.frame(
group=c("A", "B","C", "D", "F"),
value=c(85,255,289,212,9)#from script 2
)
#pie chart
cgpa<- ggplot(data, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
#Graph for coding experience
coding <- ggplot(census, aes(x = coding_exp))+
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Previous Experience")+ylab("Number of Respondents")+
coord_flip()
#Combine the graphs
ggarrange(program, sex, cgpa, coding, ncol = 2, nrow = 2)
#Graph for sex distribution in census
sex <- ggplot(census, aes(x = sex))+
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Sex")+ylab("Number of Respondents")+
coord_flip()
#Graph for sex distribution in census
#Create data frame for a pie chart
data <- data.frame(
group=c("A", "B","C", "D", "F"),
value=c(85,255,289,212,9)#from script 2
)
#pie chart
cgpa<- ggplot(data, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
#Graph for coding experience
coding <- ggplot(census, aes(x = coding_exp))+
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Previous Experience")+ylab("Number of Respondents")+
coord_flip()
#Combine the graphs
ggarrange(sex, cgpa, coding, ncol = 2, nrow = 2)
#Graph for sex distribution in census
sex <- ggplot(census, aes(x = sex))+
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Sex")+ylab("Number of Respondents")+
coord_flip()
#Graph for sex distribution in census
#Create data frame for a pie chart
data <- data.frame(
group=c("A", "B","C", "D", "F"),
value=c(85,255,289,212,9)#from script 2
)
#pie chart
cgpa<- ggplot(data, aes(x="", y=value, fill=group)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
#Graph for coding experience
coding <- ggplot(census, aes(x = coding_exp))+
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Previous Experience")+ylab("Number of Respondents")+
coord_flip()
#Combine the graphs
ggarrange(sex, cgpa, coding, labels = c("(a)", "(b)", "(c)"), ncol = 2, nrow = 2)
census <- read_csv("~/GitHub/STA304-PS5/inputs/data/census.csv")
attach(census)#Attach the variable names to path
#Create graph for program distribution in the census
ggplot(census, aes(x = program)) +
geom_bar(alpha = 0.8, color = "cyan4", fill = "cyan4") +
theme_minimal() +
xlab("Programs")+ylab("Number of Respondents")+
coord_flip()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::install_tinytex()
